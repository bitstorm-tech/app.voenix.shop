# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0

# Storage Configuration
storage.root=/Users/joe/projects/joto-ai/app.voenix.shop/backend/storage

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# PDF Configuration
pdf.size.width=239
pdf.size.height=150
pdf.margin=1

# PDF QR Code Configuration
pdf.qr.base-url=${app.base-url}

# Spring Session Configuration
spring.session.jdbc.initialize-schema=never
spring.session.timeout=24h

# Application Configuration
app.base-url=http://localhost:8080

# Test Mode Configuration
# When app.test-mode=true, AI image generation will be mocked
# TestModeImageGenerationStrategy will return original images instead of calling OpenAI API
# This is useful for development and testing to avoid API costs and external dependencies
# Set to false or omit for production use with real OpenAI integration
# app.test-mode=false